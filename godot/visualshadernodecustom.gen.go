package godot

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewVisualShaderNodeCustomFromPointer(ptr gdnative.Pointer) VisualShaderNodeCustom {
func newVisualShaderNodeCustomFromPointer(ptr gdnative.Pointer) VisualShaderNodeCustom {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualShaderNodeCustom{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type VisualShaderNodeCustom struct {
	VisualShaderNode
	owner gdnative.Object
}

func (o *VisualShaderNodeCustom) BaseClass() string {
	return "VisualShaderNodeCustom"
}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetCategory() gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetCategory()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_category")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false input_vars Array} { false output_vars Array} { false mode int} { false type int}], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetCode(inputVars gdnative.Array, outputVars gdnative.Array, mode gdnative.Int, aType gdnative.Int) gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetCode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 4, 4)
	ptrArguments[0] = gdnative.NewPointerFromArray(inputVars)
	ptrArguments[1] = gdnative.NewPointerFromArray(outputVars)
	ptrArguments[2] = gdnative.NewPointerFromInt(mode)
	ptrArguments[3] = gdnative.NewPointerFromInt(aType)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_code")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetDescription() gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetDescription()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_description")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false mode int}], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetGlobalCode(mode gdnative.Int) gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetGlobalCode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(mode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_global_code")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *VisualShaderNodeCustom) X_GetInputPortCount() gdnative.Int {
	//log.Println("Calling VisualShaderNodeCustom.X_GetInputPortCount()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_input_port_count")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false port int}], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetInputPortName(port gdnative.Int) gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetInputPortName()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(port)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_input_port_name")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false port int}], Returns: int
*/
func (o *VisualShaderNodeCustom) X_GetInputPortType(port gdnative.Int) gdnative.Int {
	//log.Println("Calling VisualShaderNodeCustom.X_GetInputPortType()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(port)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_input_port_type")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetName() gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetName()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_name")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *VisualShaderNodeCustom) X_GetOutputPortCount() gdnative.Int {
	//log.Println("Calling VisualShaderNodeCustom.X_GetOutputPortCount()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_output_port_count")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false port int}], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetOutputPortName(port gdnative.Int) gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetOutputPortName()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(port)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_output_port_name")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false port int}], Returns: int
*/
func (o *VisualShaderNodeCustom) X_GetOutputPortType(port gdnative.Int) gdnative.Int {
	//log.Println("Calling VisualShaderNodeCustom.X_GetOutputPortType()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(port)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_output_port_type")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *VisualShaderNodeCustom) X_GetReturnIconType() gdnative.Int {
	//log.Println("Calling VisualShaderNodeCustom.X_GetReturnIconType()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_return_icon_type")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *VisualShaderNodeCustom) X_GetSubcategory() gdnative.String {
	//log.Println("Calling VisualShaderNodeCustom.X_GetSubcategory()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeCustom", "_get_subcategory")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	return ret
}

// VisualShaderNodeCustomImplementer is an interface that implements the methods
// of the VisualShaderNodeCustom class.
type VisualShaderNodeCustomImplementer interface {
	VisualShaderNodeImplementer
	X_GetCategory() gdnative.String
	X_GetCode(inputVars gdnative.Array, outputVars gdnative.Array, mode gdnative.Int, aType gdnative.Int) gdnative.String
	X_GetDescription() gdnative.String
	X_GetGlobalCode(mode gdnative.Int) gdnative.String
	X_GetInputPortCount() gdnative.Int
	X_GetInputPortName(port gdnative.Int) gdnative.String
	X_GetInputPortType(port gdnative.Int) gdnative.Int
	X_GetName() gdnative.String
	X_GetOutputPortCount() gdnative.Int
	X_GetOutputPortName(port gdnative.Int) gdnative.String
	X_GetOutputPortType(port gdnative.Int) gdnative.Int
	X_GetReturnIconType() gdnative.Int
	X_GetSubcategory() gdnative.String
}
