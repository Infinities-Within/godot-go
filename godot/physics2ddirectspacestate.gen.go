package godot

import (
	"github.com/gabstv/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewPhysics2DDirectSpaceStateFromPointer(ptr gdnative.Pointer) Physics2DDirectSpaceState {
func newPhysics2DDirectSpaceStateFromPointer(ptr gdnative.Pointer) Physics2DDirectSpaceState {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := Physics2DDirectSpaceState{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type Physics2DDirectSpaceState struct {
	Object
	owner gdnative.Object
}

func (o *Physics2DDirectSpaceState) BaseClass() string {
	return "Physics2DDirectSpaceState"
}

/*
        Undocumented
	Args: [{ false shape Physics2DShapeQueryParameters}], Returns: Array
*/
func (o *Physics2DDirectSpaceState) CastMotion(shape Physics2DShapeQueryParametersImplementer) gdnative.Array {
	//log.Println("Calling Physics2DDirectSpaceState.CastMotion()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(shape.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DDirectSpaceState", "cast_motion")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false shape Physics2DShapeQueryParameters} {32 true max_results int}], Returns: Array
*/
func (o *Physics2DDirectSpaceState) CollideShape(shape Physics2DShapeQueryParametersImplementer, maxResults gdnative.Int) gdnative.Array {
	//log.Println("Calling Physics2DDirectSpaceState.CollideShape()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromObject(shape.GetBaseObject())
	ptrArguments[1] = gdnative.NewPointerFromInt(maxResults)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DDirectSpaceState", "collide_shape")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false shape Physics2DShapeQueryParameters}], Returns: Dictionary
*/
func (o *Physics2DDirectSpaceState) GetRestInfo(shape Physics2DShapeQueryParametersImplementer) gdnative.Dictionary {
	//log.Println("Calling Physics2DDirectSpaceState.GetRestInfo()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(shape.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DDirectSpaceState", "get_rest_info")

	// Call the parent method.
	// Dictionary
	retPtr := gdnative.NewEmptyDictionary()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewDictionaryFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false point Vector2} {32 true max_results int} {[] true exclude Array} {2147483647 true collision_layer int} {True true collide_with_bodies bool} {False true collide_with_areas bool}], Returns: Array
*/
func (o *Physics2DDirectSpaceState) IntersectPoint(point gdnative.Vector2, maxResults gdnative.Int, exclude gdnative.Array, collisionLayer gdnative.Int, collideWithBodies gdnative.Bool, collideWithAreas gdnative.Bool) gdnative.Array {
	//log.Println("Calling Physics2DDirectSpaceState.IntersectPoint()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 6, 6)
	ptrArguments[0] = gdnative.NewPointerFromVector2(point)
	ptrArguments[1] = gdnative.NewPointerFromInt(maxResults)
	ptrArguments[2] = gdnative.NewPointerFromArray(exclude)
	ptrArguments[3] = gdnative.NewPointerFromInt(collisionLayer)
	ptrArguments[4] = gdnative.NewPointerFromBool(collideWithBodies)
	ptrArguments[5] = gdnative.NewPointerFromBool(collideWithAreas)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DDirectSpaceState", "intersect_point")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false point Vector2} { false canvas_instance_id int} {32 true max_results int} {[] true exclude Array} {2147483647 true collision_layer int} {True true collide_with_bodies bool} {False true collide_with_areas bool}], Returns: Array
*/
func (o *Physics2DDirectSpaceState) IntersectPointOnCanvas(point gdnative.Vector2, canvasInstanceId gdnative.Int, maxResults gdnative.Int, exclude gdnative.Array, collisionLayer gdnative.Int, collideWithBodies gdnative.Bool, collideWithAreas gdnative.Bool) gdnative.Array {
	//log.Println("Calling Physics2DDirectSpaceState.IntersectPointOnCanvas()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 7, 7)
	ptrArguments[0] = gdnative.NewPointerFromVector2(point)
	ptrArguments[1] = gdnative.NewPointerFromInt(canvasInstanceId)
	ptrArguments[2] = gdnative.NewPointerFromInt(maxResults)
	ptrArguments[3] = gdnative.NewPointerFromArray(exclude)
	ptrArguments[4] = gdnative.NewPointerFromInt(collisionLayer)
	ptrArguments[5] = gdnative.NewPointerFromBool(collideWithBodies)
	ptrArguments[6] = gdnative.NewPointerFromBool(collideWithAreas)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DDirectSpaceState", "intersect_point_on_canvas")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false from Vector2} { false to Vector2} {[] true exclude Array} {2147483647 true collision_layer int} {True true collide_with_bodies bool} {False true collide_with_areas bool}], Returns: Dictionary
*/
func (o *Physics2DDirectSpaceState) IntersectRay(from gdnative.Vector2, to gdnative.Vector2, exclude gdnative.Array, collisionLayer gdnative.Int, collideWithBodies gdnative.Bool, collideWithAreas gdnative.Bool) gdnative.Dictionary {
	//log.Println("Calling Physics2DDirectSpaceState.IntersectRay()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 6, 6)
	ptrArguments[0] = gdnative.NewPointerFromVector2(from)
	ptrArguments[1] = gdnative.NewPointerFromVector2(to)
	ptrArguments[2] = gdnative.NewPointerFromArray(exclude)
	ptrArguments[3] = gdnative.NewPointerFromInt(collisionLayer)
	ptrArguments[4] = gdnative.NewPointerFromBool(collideWithBodies)
	ptrArguments[5] = gdnative.NewPointerFromBool(collideWithAreas)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DDirectSpaceState", "intersect_ray")

	// Call the parent method.
	// Dictionary
	retPtr := gdnative.NewEmptyDictionary()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewDictionaryFromPointer(retPtr)
	return ret
}

/*
        Undocumented
	Args: [{ false shape Physics2DShapeQueryParameters} {32 true max_results int}], Returns: Array
*/
func (o *Physics2DDirectSpaceState) IntersectShape(shape Physics2DShapeQueryParametersImplementer, maxResults gdnative.Int) gdnative.Array {
	//log.Println("Calling Physics2DDirectSpaceState.IntersectShape()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromObject(shape.GetBaseObject())
	ptrArguments[1] = gdnative.NewPointerFromInt(maxResults)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DDirectSpaceState", "intersect_shape")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	return ret
}

// Physics2DDirectSpaceStateImplementer is an interface that implements the methods
// of the Physics2DDirectSpaceState class.
type Physics2DDirectSpaceStateImplementer interface {
	ObjectImplementer
	CastMotion(shape Physics2DShapeQueryParametersImplementer) gdnative.Array
	CollideShape(shape Physics2DShapeQueryParametersImplementer, maxResults gdnative.Int) gdnative.Array
	GetRestInfo(shape Physics2DShapeQueryParametersImplementer) gdnative.Dictionary
	IntersectPoint(point gdnative.Vector2, maxResults gdnative.Int, exclude gdnative.Array, collisionLayer gdnative.Int, collideWithBodies gdnative.Bool, collideWithAreas gdnative.Bool) gdnative.Array
	IntersectPointOnCanvas(point gdnative.Vector2, canvasInstanceId gdnative.Int, maxResults gdnative.Int, exclude gdnative.Array, collisionLayer gdnative.Int, collideWithBodies gdnative.Bool, collideWithAreas gdnative.Bool) gdnative.Array
	IntersectRay(from gdnative.Vector2, to gdnative.Vector2, exclude gdnative.Array, collisionLayer gdnative.Int, collideWithBodies gdnative.Bool, collideWithAreas gdnative.Bool) gdnative.Dictionary
	IntersectShape(shape Physics2DShapeQueryParametersImplementer, maxResults gdnative.Int) gdnative.Array
}
